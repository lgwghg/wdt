<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webside.forget.mapper.IUserForgetPasswordMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<cache eviction="LRU" flushInterval="100000" type="org.mybatis.caches.ehcache.LoggingEhcache"/> 

	<!-- 将实体与字段对应关系 -->
	<resultMap id="resultMap" type="com.webside.forget.model.UserForgetPassword">
		<id column="id" property="id"/> <!-- 主键-->
		<id column="type" property="type"/>
		<result column="user_id" property="userId"/> <!-- 用户-->
		<result column="forget_reason" property="forgetReason"/> <!-- -->
		<result column="status" property="status"/> <!-- 状态-->
		<result column="create_id" property="createId"/> <!-- 创建者-->
		<result column="create_time" property="createTime"/> <!-- 创建时间-->
		<result column="user_id" property="user.id"/>
		<result column="nick_name" property="user.nickName"/>
	</resultMap>
	
	<!-- t_user_forget_password字段列表-->
	<sql id="columnList">
		<trim suffixOverrides=",">
			t.id, <!-- 主键-->
			t.user_id, <!-- 用户-->
			t.forget_reason, <!-- -->
			t.status, <!-- 状态-->
			t.create_id, <!-- 创建者-->
			t.create_time, <!-- 创建时间-->
			t.type,
		</trim>
	</sql>
	
	<!-- 查询t_user_forget_password分页 -->
	<select id="queryListByPage" parameterType="map" resultMap="resultMap" flushCache="true" useCache="true">
		select
			u.nick_name,
			<include refid="columnList"/>
		from t_user_forget_password t inner join tb_user u on t.user_id = u.id
		<trim prefix="WHERE" prefixOverrides="AND | OR">  
			<if test="userId != null and userId != ''">
				AND user_id=#{userId}
			</if>
			<if test="forgetReason != null and forgetReason != ''">
				AND forget_reason=#{forgetReason}
			</if>
			<if test="status != null and status != ''">
				AND status=#{status}
			</if>
			<if test="createId != null and createId != ''">
				AND create_id=#{createId}
			</if>
			<if test="createTime != null and createTime != ''">
				AND create_time=#{createTime}
			</if>
		</trim>
	</select>
	
	<!-- 新增t_user_forget_password -->
	<insert id="insert" 
			parameterType="com.webside.forget.model.UserForgetPassword">
		insert into t_user_forget_password
		<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="id != null">id,</if>
		<if test="type != null">type,</if>
		<if test="userId != null">user_id,</if><!-- 用户-->
		<if test="forgetReason != null">forget_reason,</if><!-- -->
		<if test="status != null">status,</if><!-- 状态-->
		<if test="createId != null">create_id,</if><!-- 创建者-->
		<if test="createTime != null">create_time,</if><!-- 创建时间-->
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="id != null">#{id},</if>
		<if test="type != null">#{type},</if>
		<if test="userId != null">#{userId},</if><!-- 用户-->
		<if test="forgetReason != null">#{forgetReason},</if><!-- -->
		<if test="status != null">#{status},</if><!-- 状态-->
		<if test="createId != null">#{createId},</if><!-- 创建者-->
		<if test="createTime != null">#{createTime},</if><!-- 创建时间-->
		</trim>
	</insert>
	
	<!-- 根据ID查询t_user_forget_password -->
	<select id="findById" resultMap="resultMap" parameterType="String" flushCache="true" useCache="true">
		select  
			<include refid="columnList"/>
		from t_user_forget_password t
		where id = #{id}
	</select>
	
	<!-- 更新t_user_forget_password -->
	<update id="updateById" parameterType="com.webside.forget.model.UserForgetPassword" flushCache="true">
		update t_user_forget_password
		<set>
			<trim suffixOverrides=",">
				<if test="userId != null">user_id=#{userId},</if><!-- 用户-->
				<if test="forgetReason != null">forget_reason=#{forgetReason},</if><!-- -->
				<if test="status != null">status=#{status},</if><!-- 状态-->
				<if test="createId != null">create_id=#{createId},</if><!-- 创建者-->
				<if test="createTime != null">create_time=#{createTime},</if><!-- 创建时间-->
			</trim>
		</set>
		where id = #{id}
	</update>
	
	<!-- 根据ID列表删除t_user_forget_password -->
	<delete id="deleteBatchById" parameterType="list" flushCache="true">
		delete from t_user_forget_password  
		where id in
		<foreach collection="list" item = "id" open="(" separator="," close=")">
	    	#{id}  
	    </foreach>
	</delete>
	
	<!-- 根据ID删除t_user_forget_password -->
	<delete id="deleteById" parameterType="String" flushCache="true">
		delete from t_user_forget_password 
		where id = #{id}
	</delete>
</mapper>